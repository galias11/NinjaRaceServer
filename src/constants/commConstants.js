//Communication between session process and client
const sessionClientMsgConstants = {
    SESSION_SC_COMM_ACK: 0,
    SESSION_SC_COMM_CHECK_PORT: 1,
    SESSION_SC_COMM_CREATED: 2,
    SESSION_SC_COMM_FINAL_TIMER: 3,
    SESSION_SC_COMM_END: 4,
    SESSION_SC_COMM_LOAD_FINISH: 5,
    SESSION_SC_COMM_START_SYNC: 6,
    SESSION_SC_COMM_UPDATE: 7
};

//Communication between session process and game session controller.
const sessionServerMsgConstants = {
    SESSION_MSG_TYPE_ABORT: 'SESSION_MSG_TYPE_ABORT',
    SESSION_MSG_TYPE_CREATE: 'SESSION_MSG_TYPE_CREATE',
    SESSION_MSG_TYPE_CREATED: 'SESSION_MSG_TYPE_CREATED',
    SESSION_MSG_TYPE_END: 'SESSION_MSG_TYPE_END',
    SESSION_MSG_TYPE_ERR: 'SESSION_MSG_TYPE_ERR',
    SESSION_MSG_TYPE_INFO: 'SESSION_MSG_TYPE_INFO',
    SESSION_MSG_TYPE_INIT_SENT: 'SESSION_MSG_TYPE_INIT_SENT',
    SESSION_MSG_TYPE_INIT_SUCCESS: 'SESSION_MSG_TYPE_INIT_SUCCESS',
    SESSION_MSG_TYPE_PLAYER_DISCONNECTED: 'SESSION_MSG_TYPE_PLAYER_DISCONNECTED',
    SESSION_MSG_TYPE_PLAYER_VALIDATED: 'SESSION_MSG_TYPE_PLAYER_VALIDATED',
    SESSION_MSG_TYPE_PLAYER_READY: 'SESSION_MSG_TYPE_PLAYER_READY',
    SESSION_MSG_TYPE_START: 'SESSION_MSG_TYPE_START'
};

const observerMsgConstants = {
    OBSERVER_MSG_ACTION_ABORT: 'OBSERVER_MSG_ACTION_ABORT',
    OBSERVER_MSG_ACTION_ADD_PLAYER: 'OBSERVER_MSG_ACTION_ADD_PLAYER',
    OBSERVER_MSG_ACTION_END: 'OBSERVER_MSG_ACTION_END',
    OBSERVER_MSG_ACTION_PLAYER_CONNECTION_LOST: 'OBSERVER_MSG_ACTION_PLAYER_CONNECTION_LOST',
    OBSERVER_MSG_ACTION_START: 'OBSERVER_MSG_ACTION_START',
    OBSERVER_MSG_ACTION_UPDATE_RECORD: 'OBSERVER_MSG_ACTION_UPDATE_RECORD',
    OBSERVER_MSG_ACTION_VALIDATE: 'OBSERVER_MSG_ACTION_VALIDATE'
};

module.exports = {
    ...sessionClientMsgConstants,
    ...observerMsgConstants,
    ...sessionServerMsgConstants
}